#!/bin/bash

# Function to open a file or folder in VS Code
open_in_vscode() {
    local target_path="$1"
    # On macOS, the command is "code" by default
    code "$target_path"
}

# Function to copy the directory path
copy_directory_path() {
    local target_path="$1"
    echo -n "$target_path" | pbcopy  # On macOS, we use pbcopy to copy to the clipboard
    echo "Directory path copied to clipboard: $target_path"
}

# Function to format all .c and .h files in a directory and its subdirectories
format_directory() {
    local directory="$1"
    echo "Formatting files in $directory and its subdirectories..."
    # Use find command to locate all .c and .h files within the directory and its subdirectories
    # Pipe the results to xargs to execute the formatting command for each file
    find "$directory" -type f \( -name "*.c" -o -name "*.h" \) -print0 | while IFS= read -r -d '' file; do
        # Call the formatter for each file
        c_formatter_42 "$file"
    done
    echo "Formatting in $directory complete."
}

# Function to open the terminal in the specified directory
open_in_terminal() {
    local target_path="$1"
    osascript -e "tell application \"iTerm\"" -e "tell current window" -e "create tab with default profile" -e "tell current session to write text \"cd $target_path && clear\"" -e "end tell" -e "end tell"
}

# Function to prompt user for action
prompt_action() {
    local target_path="$1"
    local choice=1

    while [ "$choice" -ne 0 ]; do
        echo -e "\033[1mDo you want to open the directory in VS Code, copy its path, format files, or navigate to it in the terminal?\033[0m"
        echo -e "\033[1m\033[32m1: \033[0mOpen in VS Code"
        echo -e "\033[1m\033[32m2: \033[0mFormat files with C_Formatter_42"
        echo -e "\033[1m\033[32m3: \033[0mNavigate to Directory in Terminal"
        echo -e "\033[1m\033[32m4: \033[0mCopy Directory"
        echo -e "\033[1m\033[31m0: \033[0mExit"
        read -rp $'\033[1mChoice: \033[0m' action_choice

        case "$action_choice" in
            0)
                echo "Exiting."
                exit 0
                ;;
            1)
                open_in_vscode "$target_path"
                ;;
            2)
                format_directory "$target_path"
                ;;
            3)
                echo "Navigating to directory: $target_path"
                open_in_terminal "$target_path"  # Function to open the terminal in the specified directory
                ;;
            4)
                copy_directory_path "$target_path"
                ;;
            *)
                echo "Invalid choice."
                ;;
        esac

        # Prompt user to go back to action menu prompt or exit
        echo -e "\033[1mDo you want to perform another action or exit?\033[0m"
        echo -e "\033[1m\033[32m1: \033[0mGo Back to Action Menu"
        echo -e "\033[1m\033[31m0: \033[0mExit"
        read -rp $'\033[1mChoice: \033[0m' choice
    done
}

# Function to list files and folders with a specific name
list_files_and_folders() {
    local search_name="$1"
    local base_directories=("${@:2}")
    local files=()
    local folders=()

    # Find files and folders with the specified name in base directories and their subdirectories
    for base_directory in "${base_directories[@]}"; do
        # Find files
        while IFS= read -r -d '' file; do
            files+=("$file")
        done < <(find "$base_directory" -type f -iname "*$search_name*" -print0)

        # Find folders
        while IFS= read -r -d '' folder; do
            if [ "$folder" != "$base_directory" ]; then
                folders+=("$folder")
            fi
        done < <(find "$base_directory" -mindepth 1 -type d -iname "$search_name" -print0)
    done

    # Print the list of files and folders
    printf "\033[1mFiles and folders with the name '%s':\033[0m\n" "$search_name"
    printf "\033[1m\033[31m0: \033[0mEXIT\033[0m\n" # Exit option in bold red
    for (( i=0; i<"${#files[@]}"; i++ )); do
        printf "\033[1m\033[32m%d: \033[0m\033[95m\"%s\"\033[0m\n" $((i+1)) "${files[$i]}"  # Green color for numbers, pink for files
    done
    for (( i=0; i<"${#folders[@]}"; i++ )); do
        printf "\033[1m\033[32m%d: \033[0m\033[96m\"%s\"\033[0m\n" $((i+1+${#files[@]})) "${folders[$i]}"  # Green color for numbers, teal for folders
    done

    # Prompt user to select a file or folder
    read -rp $'\033[1mEnter the number corresponding to the file or folder you want to select:\033[0m ' choice

    # Check user choice
    if [[ "$choice" =~ ^[0-9]+$ ]] && [ "$choice" -ge 0 ] && [ "$choice" -le "$(( ${#files[@]} + ${#folders[@]} ))" ]; then
        if [ "$choice" -eq 0 ]; then
            echo -e "\033[1m\033[31mExiting.\033[0m"
            exit 0
        elif [ "$choice" -le "${#files[@]}" ]; then
            local selected_file="${files[$((choice-1))]}"
            echo "Selected file: $selected_file"
        else
            local folder_index=$(( choice - ${#files[@]} - 1 ))
            local selected_folder="${folders[$folder_index]}"
            echo "Selected folder: $selected_folder"
            # Prompt user to choose action for the selected folder
            prompt_action "$selected_folder"
        fi
    else
        echo -e "\033[1m\033[31mInvalid selection. Exiting.\033[0m"
        exit 1
    fi
}

# Main function
main() {
    # Specify the base directories
    base_directories=(
        "/Users/ludvigrieff/Desktop/42/Cursus"
        "/Users/ludvigrieff/Desktop/42/Settings"
        # Add more base directories as needed
    )

    # Check if an argument is provided
    if [ $# -eq 0 ]; then
        echo "Usage: ./find <search_name>"
        exit 1
    fi

    search_name="$1"

    # List files and folders with the specified name
    list_files_and_folders "$search_name" "${base_directories[@]}"
}

main "$@"
